h1. YUI Bootstrapper for Node.js

This node.js module attempts to setup and bootstrap a working YUI 3 instance.
It does not support any DOM manipulation, but it gives you our class management
and language extras.

I am working on an IO replacement to use the internal node.js methods instead of XMLHttpRequest


h2. Setup this repo

I am using a submodule of the official YUI 3 repository, so you need to issue this after you pull this fork:

<pre class="console">
    git submodule init
    git submodule update
</pre>

That should pull in the latest build of the /yui/yui3 repo.

h2. Including the files

<pre class="console">
    //Mixin the YUI file so we have a global YUI object 
    process.mixin(GLOBAL, require('./yui3/build/yui/yui-debug'));
    //Mixin the bootstrapper that replaces a couple of YUI modules
    process.mixin(GLOBAL, require('./node-yui3'));
</pre>

h2. Using YUI

<pre class="console">
// load YUI
var YUI = require("./node-yui3").YUI;

//sys.puts('After: ' + sys.inspect(process.memoryUsage()));

//Now use non-DOM related YUI utilities
YUI({
    filter: 'debug',
    debug: true
}).use('io-base', 'json', 'base', function(Y) {

    //sys.puts('Inside: ' + sys.inspect(process.memoryUsage()));
    //Logger outputs with sys.puts
    Y.log('This is a test');
    //Lang is available
    Y.log('Test: ' + Y.Lang.isBoolean(true), 'debug', 'myapp');

    //Creating a simple class
    var One = function() {
        One.superclass.constructor.apply(this, arguments);
    };
    //Extending it with Y.Base so we have Custom Events and a lifecycle
    Y.extend(One, Y.Base, {
        test: function() {
            this.publish('foo', {
                emitFacade: true
            });
            this.fire('foo');
        }
    }, {
        NAME: 'one'
    });

    //Create a new instance of our new class
    var o = new One();
    o.on('foo', function(o) {
        Y.log('Foo Fired', 'debug', 'myapp');
        //Y.log(o, 'debug');
    });
    o.test(); //Should fire the one:foo Event.
});
</pre>


Now you can run @node ./test.js@
